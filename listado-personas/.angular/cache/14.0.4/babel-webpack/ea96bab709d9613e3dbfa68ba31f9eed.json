{"ast":null,"code":"import _classCallCheck from \"C:/Users/jkml5/CursoAngular/listado-personas/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/jkml5/CursoAngular/listado-personas/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { LoggingService } from './LoggingService.service';\nimport { DataService } from './data.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./LoggingService.service\";\nimport * as i2 from \"./data.service\";\nexport var PersonasService = /*#__PURE__*/(function () {\n  var PersonasService = /*#__PURE__*/function () {\n    function PersonasService(loggingService, dataService) {\n      _classCallCheck(this, PersonasService);\n\n      this.loggingService = loggingService;\n      this.dataService = dataService;\n      this.personas = [];\n    } //Lo usamos para iniciar el arreglo, ya que ya es asincrono desde la BD\n    //Se inicializa desde el compoente PersonasComponent    \n\n\n    _createClass(PersonasService, [{\n      key: \"setPersonas\",\n      value: function setPersonas(personas) {\n        this.personas = personas;\n      }\n    }, {\n      key: \"obtenerPersonas\",\n      value: function obtenerPersonas() {\n        return this.dataService.cargarPersonas();\n      }\n    }, {\n      key: \"agregarPersona\",\n      value: function agregarPersona(persona) {\n        this.loggingService.enviaMensajeAConsola(\"agregamos persona:\" + persona.toString());\n\n        if (this.personas == null) {\n          this.personas = [];\n        }\n\n        this.personas.push(persona);\n        this.dataService.guardarPersonas(this.personas); //Si se guarda solo un elemento se debe trabajar cada indice y regenerarlos con cada modificacion\n        //this.dataService.guardarPersona(persona, this.personas.length);\n      }\n    }, {\n      key: \"encontrarPersona\",\n      value: function encontrarPersona(index) {\n        var persona = this.personas[index];\n        this.loggingService.enviaMensajeAConsola(\"persona encontrada:\" + persona.toString());\n        return persona;\n      }\n    }, {\n      key: \"modificarPersona\",\n      value: function modificarPersona(index, persona) {\n        this.loggingService.enviaMensajeAConsola(\"persona a modificar:\" + persona.toString() + \" con indice:\" + index);\n        var persona1 = this.personas[index];\n        persona1.nombre = persona.nombre;\n        persona1.apellido = persona.apellido;\n        this.dataService.modificarPersona(index, persona);\n      }\n    }, {\n      key: \"modificarPersonas\",\n      value: function modificarPersonas() {\n        this.loggingService.enviaMensajeAConsola(\"modificar todas las personas:\");\n        if (this.personas != null) //Guarda todas las personas nuevamente para regenerar indicess\n          this.dataService.guardarPersonas(this.personas);\n      }\n    }, {\n      key: \"eliminarPersona\",\n      value: function eliminarPersona(index) {\n        this.loggingService.enviaMensajeAConsola(\"eliminar persona con indice: \" + index);\n        this.personas.splice(index, 1);\n        this.dataService.eliminarPersona(index); //Se vuelven a guardar todas las personas para que coincida el indice con el arreglo en memoria\n\n        this.modificarPersonas();\n      }\n    }]);\n\n    return PersonasService;\n  }();\n\n  PersonasService.ɵfac = function PersonasService_Factory(t) {\n    return new (t || PersonasService)(i0.ɵɵinject(i1.LoggingService), i0.ɵɵinject(i2.DataService));\n  };\n\n  PersonasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PersonasService,\n    factory: PersonasService.ɵfac\n  });\n  return PersonasService;\n})();","map":null,"metadata":{},"sourceType":"module"}